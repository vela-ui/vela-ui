.checkbox-wrapper {
  @apply text-base-content relative flex cursor-pointer items-center gap-2 text-sm select-none;

  &[data-disabled] {
    @apply cursor-not-allowed opacity-30;
  }

  &[data-focus-visible] .checkbox {
    outline: 2px solid var(--input-color, currentColor);
    outline-offset: 2px;
  }

  &[data-invalid] .checkbox {
    @apply text-error-content;
    --input-color: theme(colors.error);
  }

  &[data-selected] {
    .checkbox {
      background-color: var(--input-color, #0000);
      box-shadow:
        0 0 #0000 inset,
        0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
        0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));

      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        @apply opacity-100;
      }
      @media (forced-colors: active) {
        &:before {
          @apply rotate-0 bg-transparent [--tw-content:"✔︎"] [clip-path:none];
        }
      }
      @media print {
        &:before {
          @apply rotate-0 bg-transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
  }

  &[data-indeterminate] {
    .checkbox {
      &:before {
        @apply rotate-0 opacity-100;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
  }
}

.checkbox {
  @apply text-base-content rounded-selector inline-flex shrink-0 items-center justify-center overflow-hidden p-1;
  box-shadow:
    0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
    0 0 #0000 inset,
    0 0 #0000;
  transition:
    background-color 0.2s,
    box-shadow 0.2s;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: var(--size);
  height: var(--size);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
  border: var(--border) solid var(--input-color, theme(colors.base-content));
  @supports (color: color-mix(in oklab, black, black)) {
    border-color: var(--input-color, color-mix(in oklab, theme(colors.base-content) 20%, #0000));
  }

  &:before {
    --tw-content: "";
    content: var(--tw-content);
    @apply block size-full rotate-45 bg-current opacity-0;
    transition:
      clip-path 0.3s,
      opacity 0.1s,
      rotate 0.3s,
      translate 0.3s;
    transition-delay: 0.1s;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
    box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    font-size: 1rem;
    line-height: 0.75;
  }

  svg {
    @apply size-full;
  }
}

.checkbox-primary {
  @apply text-primary-content;
  --input-color: theme(colors.primary);
}

.checkbox-secondary {
  @apply text-secondary-content;
  --input-color: theme(colors.secondary);
}

.checkbox-accent {
  @apply text-accent-content;
  --input-color: theme(colors.accent);
}

.checkbox-neutral {
  @apply text-neutral-content;
  --input-color: theme(colors.neutral);
}

.checkbox-info {
  @apply text-info-content;
  --input-color: theme(colors.info);
}

.checkbox-success {
  @apply text-success-content;
  --input-color: theme(colors.success);
}

.checkbox-warning {
  @apply text-warning-content;
  --input-color: theme(colors.warning);
}

.checkbox-error {
  @apply text-error-content;
  --input-color: theme(colors.error);
}

.checkbox-xs {
  @apply p-[0.125rem];
  --size: calc(var(--size-selector, 0.25rem) * 4);
}

.checkbox-sm {
  @apply p-[0.1875rem];
  --size: calc(var(--size-selector, 0.25rem) * 5);
}

.checkbox-md {
  @apply p-[0.25rem];
  --size: calc(var(--size-selector, 0.25rem) * 6);
}

.checkbox-lg {
  @apply p-[0.3125rem];
  --size: calc(var(--size-selector, 0.25rem) * 7);
}

.checkbox-xl {
  @apply p-[0.375rem];
  --size: calc(var(--size-selector, 0.25rem) * 8);
}
